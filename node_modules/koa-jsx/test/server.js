var koa = require('koa');
var serve = require('koa-static');
var app = koa();
var cwd = process.cwd();
var serveIndex = require('koa-serve-index');
app.use(serveIndex(cwd, {
  hidden: true,
  view: 'details'
}));
var jsx = require('../');
app.use(jsx(cwd, {
  babel: require('babel-core'),
  transformOption:{
    retainLines:true
  },
  next: function () {
    return 1;
  }
}));
var modularize = require('koa-modularize');
app.use(modularize(cwd, {
  nowrap: function () {
    return this.url.indexOf('nowrap') != -1;
  },
  next: function () {
    return 1;
  }
}));
var Buffer = require('buffer').Buffer;
function inlineSourceMap(sourceMaps, sourceCode, sourceFilename) {
  // This can be used with a sourcemap that has already has toJSON called on it.
  // Check first.
  var json = sourceMaps;
  if (typeof sourceMaps.toJSON === 'function') {
    json = sourceMaps.toJSON();
  }
  json.sources = [sourceFilename];
  json.sourcesContent = [sourceCode];
  var base64 = Buffer(JSON.stringify(json)).toString('base64');
  return '//# sourceMappingURL=data:application/json;base64,' + base64;
}

app.use(require('koa-source-map')({}));

app.use(serve(cwd, {
  hidden: true
}));
app.listen(8000);
console.log('server start at ' + 8000);